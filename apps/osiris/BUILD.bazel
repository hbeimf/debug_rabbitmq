load(
    "@bazel-erlang//:bazel_erlang_lib.bzl",
    "erlang_lib",
    "test_erlang_lib",
)
load("@bazel-erlang//:xref.bzl", "xref")
load("@bazel-erlang//:dialyze.bzl", "dialyze", "plt")
load("@bazel-erlang//:ct_sharded.bzl", "ct_suite")

NAME = "osiris"

VERSION = "0.1.0"

APP_ENV = """[
	{data_dir, "/tmp/osiris"},
	{port_range, {6000, 6500}},
	{max_segment_size_chunks, 256000}
]"""

EXTRA_APPS = [
    "sasl",
    "crypto",
]

DEPS = [
    "@gen_batch_server//:bazel_erlang_lib",
]

RUNTIME_DEPS = [
    "@seshat//:bazel_erlang_lib",
]

erlang_lib(
    app_env = APP_ENV,
    app_name = NAME,
    app_version = VERSION,
    extra_apps = EXTRA_APPS,
    runtime_deps = RUNTIME_DEPS,
    deps = DEPS,
)

test_erlang_lib(
    app_env = APP_ENV,
    app_name = NAME,
    app_version = VERSION,
    extra_apps = EXTRA_APPS,
    runtime_deps = RUNTIME_DEPS,
    deps = DEPS,
)

xref()

plt(
    name = "base_plt",
)

dialyze(
    plt = ":base_plt",
)

[ct_suite(
    name = f.replace("test/", "").replace(".erl", ""),
) for f in glob(
    ["test/*_SUITE.erl"],
    exclude = ["test/osiris_SUITE.erl"],
)]

ct_suite(
    name = "osiris_SUITE",
    data = [
        "@tls_gen//:basic",
    ],
    test_env = {
        "DEPS_DIR": "$TEST_SRCDIR/$TEST_WORKSPACE/external",
    },
)
